{"name":"Java-basis","tagline":"Samenvatting cursus JAVA basis TMK-ICT","body":"JAVA-basis (Swing)\r\n==========\r\n\r\nSamenvatting cursus JAVA basis Thomas More Kempen: Elektronica-ICT.\r\n\r\nU kan deze samenvatting offline lezen met de [markdown-preview plug-in](https://github.com/volca/markdown-preview) voor Chrome. Vink zeker de optie \"Allow access to file URLs\" aan in [chrome://extensions/](chrome://extensions/)\r\n\r\n## Inhoudstafel\r\n\r\n- [NetBeans shortcuts](#netbeans-shortcuts)\r\n- [NetBeans Code Templates](#netbeans-code-templates)\r\n- [JAVA packages](#java-packages)\r\n- [Primitieve data-types](#primitieve-data-types)\r\n- [Keuzes en herhalingen](#keuzes-en-herhalingen)\r\n- [UML-diagrammen](UML/uml.md)\r\n- [Klassen en objecten](#klassen-en-objecten)\r\n- [Array vs. ArrayList](#array-vs-arraylist)\r\n- [Links](#links)\r\n\r\n## NetBeans shortcuts\r\n\r\n| Shortcut        | Actie  |\r\n| ------------- | -----|\r\n| `Ctrl+r` | Naam van een variabele globaal vervangen |\r\n| `Ctrl+shift+c` | Zet een volledig blok code in/uit commentaar |\r\n| `Ctrl+shift+i` | Voeg ontbrekende imports toe |\r\n| `Alt-Shift-F` | Herformateer decode |\r\n\r\n## NetBeans Code Templates\r\n\r\nCode Templates zijn lettercombinaties waarmee u snel een basisstructuur op de pagina plaatste.   \r\nU vindt deze terug onder het menu: Tools -> Options -> Editor -> Code Templates (Language: Java).  \r\n\r\nTyp de lettercombinatie gevolgd door een tab om de code te plaatsen.\r\n\r\nEnkele voorbeelden van voorgedefinieerde templates:\r\n\r\n| Lettercombinatie | Actie  |\r\n| ------------- | -----|\r\n| `psvm` | methode main() |\r\n| `sout` | methoden System.out.println() |\r\n| `soutv` | methode System.out.println() met variabele |\r\n| `if` | if statement |\r\n| `ife` | if-else statement |\r\n| `ws` | switch statement |\r\n| `for` | for loop |\r\n| `fore` | for-each loop (Array en ArrayList) |\r\n\r\nU kan natuurlijk ook eigen templates toevoegen. Enkele voorbeelden\r\n\r\n| Lettercombinatie |  | Actie  |\r\n| ------------- | ----- | -----|\r\n| `tmmain` | [code](codeTemplates/tmmain.md) | volledig basisscript inc. JFrame, JPanel, ActionListener en paintComponent  |\r\n| `tmaction` | [code](codeTemplates/custom.md#tmaction) | ActionListener |\r\n| `tmpaint` | [code](codeTemplates/custom.md#tmpaint) | paintComponent |\r\n| `tmpanel` | [code](codeTemplates/custom.md#tmpanel) | JPanel met ActionListener |\r\n\r\n##JAVA packages\r\n\r\n*   **javax.swing.\\***\r\n\r\n    > [JFrame](swing/JFrame.md) - [JPanel](swing/JPanel.md)   \r\n    > [JButton](swing/JButton.md) - [JLabel](swing/JLabel.md) - [JTextField](swing/JTextField.md)  - [JTextArea](swing/JTextArea.md)  \r\n    > Border - BorderFactory - [JScrollPane](swing/JTextArea.md) (zie voorbeeld JTextArea)\r\n*   **java.awt.event.\\***\r\n\r\n    >  ActionEvent - ActionListener\r\n*   **java.awt.\\***\r\n\r\n    >  Color - FlowLayout - Font - Graphics - GridLayout - Polygon\r\n*   **java.lang.\\***\r\n\r\n    >  Boolean - Char - Double - Integer - Math - Object - String - [StringBuffer](javaLang/stringBuffer.md) - System\r\n*   **java.util.\\***\r\n\r\n    >  [Array](javaUtil/array.md) - [ArrayList](javaUtil/arrayList.md) - Local - [Calendar](http://tutorials.jenkov.com/java-date-time/java-util-calendar.html)\r\n\r\n## Primitieve data-types\r\n\r\nJava kent **acht primitieve datatypes** die géén objecten zijn:  \r\n`boolean`, `char`, `byte`, `short`, `int`, `long`, `float` en `double`.  \r\nDeze datatypes zijn puur bestemd om allerlei waarden op te slaan en rekenkundige bewerkingen op uit te voeren.  \r\n\r\nVoor elk datatype bestaat wel een zogenaamd wrapper object (omhulzen, omwikkelen): `Boolean`, `Character`, `Byte`, `Short`, `Integer`, `Long`, `Float` en `Double`. \r\nMet zo'n wrapper-object kun je o.a. de primitieve datatypes converteren naar strings (met de *toString()* methode) of omgekeerd (met o.a. de *parse* methoden). Ook kun je hiermee primitieve datatypes converteren naar wrapper objecten of omgekeerd.\r\n\r\n###Gehele getallen\r\n\r\n| type |  wrapper  |bits | String (bv: \"5\") naar getal| getal naar String | Type Casting |\r\n| ------------- | -----|------------------ |  ---- | ---- | ----|\r\n| byte |  Byte | 8 | Byte.parseByte(\"string\") | \"\" + getal | (byte) getal |\r\n| short | Short| 16 | Short.parseShort(\"string\") | \"\" + getal |  (short) getal |\r\n| int |Integer| 32 |  Integer.parseInt(\"string\") | \"\" + getal | (int) getal |\r\n| long | Long|64 | Long.parseLong(\"string\") |  \"\" + getal | (long) getal |\r\n\r\n### Kommagetallen\r\n\r\n| type |  wrapper  |bits | String (bv: \"5.7\") naar getal| getal naar String | Type Casting |\r\n| ------------- | -----|----------------- |  --- | ---- | ----|\r\n| float | Float| 32 | Float.parseFloat(\"string\") | \"\" + getal | (float) getal |\r\n| double | Double|  64 |  Double.parseDouble(\"string\") | \"\" + getal | (double) getal |\r\n\r\n### Overige\r\n\r\n| overige |  wrapper  | waarde |\r\n| ------------- | -----| ------------- |\r\n| char | Character |één 16-bit [Unicode](http://nl.wikipedia.org/wiki/Unicode) karakter | \r\n| boolean | Boolean|  `true` of `false` |\r\n\r\nExtra info: [http://balusc.blogspot.be/2006/04/java-tutorial-datatypen.html](http://balusc.blogspot.be/2006/04/java-tutorial-datatypen.html)\r\n\r\n##Strings\r\n\r\n*   **Strings (en getallen) formatteren**\r\n\r\n    > [String.Format()](string/format.md)\r\n\r\n##Keuzes en herhalingen\r\n\r\n| type   | [if-else](keuze_herhaling/if.md)  | [switch](keuze_herhaling/switch.md) | [equals](keuze_herhaling/equals.md)  | [for](keuze_herhaling/for.md) | [while](keuze_herhaling/for.md) | [do-while](keuze_herhaling/for.md) |\r\n| ------ | ---- | ---- | ---- | ---- | ---- | ---- | ---- |\r\n| byte   | x | x | - | x | x | x |\r\n| short  | x | x | - | x | x | x |\r\n| int    | x | x | - | x | x | x |\r\n| long   | x | - | - | x | x | x |\r\n| float  | x | - | - | x | x | x |\r\n| double | x | - | - | x | x | x |\r\n| char   | x | x | - | x | x | x |\r\n| boolean| x | - | x | - | - | - |\r\n| String | - | - | x | - | - | - |\r\n\r\n\r\n##Klassen en objecten\r\n\r\n*   **Klassen en objecten**\r\n\r\n    > [Klassen vs objecten](klassen/klassen.md) - [UML diagram](UML/uml.md) - [StarUML](http://staruml.io/) - [Javadoc](javadoc/javadoc.md)  \r\n    \r\n## Array vs. ArrayList\r\n\r\n| mogelijkheden | [ArrayList](javaUtil/arrayList.md) | [Array](javaUtil/array.md) |\r\n| ------ | ---- | ---- |\r\n| Lengte | variabel | vast |\r\n| Resizable | x | - |\r\n| Elementen toevoegen | makkelijk | moeilijker |\r\n| Primitieve datatypes | - | x |\r\n| Objecten | x | x |\r\n| Multidimensioneel | - | x |\r\n| for-lus | waardes lezen/schrijven | waardes lezen/schrijven |\r\n| for-each-lus | enkel waardes lezen | enkel waardes lezen |\r\n \r\n\r\n## Links\r\n\r\n- [http://www.tutorialspoint.com/java/](http://www.tutorialspoint.com/java/)\r\n- [https://sites.google.com/site/cursusguielien/](https://sites.google.com/site/cursusguielien/)\r\n- [http://www.java2s.com/](http://www.java2s.com/)\r\n- [animal classification](http://kendeanagudo.hubpages.com/hub/Facts-about-Animals-Its-Types-and-Classification#)\r\n- [8 belangrijke verschillen tussen Array en ArrayList](http://javahungry.blogspot.com/2015/03/difference-between-array-and-arraylist-in-java-example.html)  \r\n- [how to use arraylist](http://examples.javacodegeeks.com/core-java/util/arraylist/arraylist-in-java-example-how-to-use-arraylist/)\r\n- [Loop ArrayList](http://beginnersbook.com/2013/12/how-to-loop-arraylist-in-java/)\r\n- [http://beginnersbook.com/](http://beginnersbook.com/)","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}